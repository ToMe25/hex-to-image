name: meson test

on:
  push:
  pull_request:
    paths:
      - "**.c"
      - "**.cpp"
      - "**.h"
      - ".github/workflows/test.yml"
      - "**meson.build"
      - "meson_options.txt"

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            name: linux
          - os: windows-latest
            name: windows
          - os: macos-latest
            name: macos
          - os: self-hosted
            name: linux-arm64

    name: Build and test on ${{ matrix.name }}
    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Setup Python
      if: ${{ matrix.name != 'linux-arm64' }}
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install gcc
      id: gcc_install
      if: ${{ matrix.name == 'macos' }}
      run: brew install gcc
  
    - name: Install cmake
      id: cmake_install
      if: ${{ matrix.name == 'linux-arm64' }}
      run: |
        sudo apt-get update
        sudo apt-get install -y cmake

    - name: Install meson and ninja
      id: meson_install
      run: pip install scikit-build ninja meson

    - name: Meson setup(${{ matrix.name }})
      id: meson_setup
      if: ${{ matrix.name != 'macos' }}
      run: meson setup builddir/
      env:
        CC: gcc

    - name: Meson setup(${{ matrix.name }})
      id: meson_macos_setup
      if: ${{ matrix.os == 'macos-latest' }}
      run: meson setup builddir/ -Ddynamic=true
      env:
        CC: gcc

    - name: Meson compile
      run: meson compile -C builddir/ -v

    - name: Meson test
      run: meson test -C builddir/ -v

    - name: Upload Log
      uses: actions/upload-artifact@v1
      if: failure()
      with:
        name: ${{ matrix.name }}_meson_testlog
        path: build/meson-logs/testlog.txt
